<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:filter="http://www.eclipse.org/sirius/diagram/description/filter/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="sirius" version="12.0.0.2017041100">
  <ownedViewpoints name="E4SM_Viewpoint" label="E4SM" modelFileExtension="e4sm e4smcode">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="e4sm_diagram_1" label="Allocation Diagram (AD)" titleExpression="aql:'[AD] ' + self.oclAsType(e4sm::Package).name" domainClass="e4sm::Package" preconditionExpression="false" enablePopupBars="true">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <defaultLayer name="Default">
        <containerMappings name="diag1_PhisicalComponent" label="PhysicalComponent" semanticCandidatesExpression="aql:self.components->select(e|e.oclIsTypeOf(e4sm::PhysicalComponent))" domainClass="e4sm::PhysicalComponent" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']" childrenPresentation="VerticalStack">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Physical Component &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_MachineLearningComponent" label="Machine Learning Component" semanticCandidatesExpression="feature:components" domainClass="e4sm::MachineLearningComponent" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Machine Learning Component &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_HeuristicComponent" label="Heuristic" semanticCandidatesExpression="feature:components" domainClass="e4sm::Heuristic" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Heuristic &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_Component" label="Component" semanticCandidatesExpression="aql:self.components->select(e | e.oclIsTypeOf(e4sm::Component))" domainClass="e4sm::Component" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Component &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_Sector" label="Sector" semanticCandidatesExpression="feature:sectors" domainClass="e4sm::Sector" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_physical_component_on_sector']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Sensor']" childrenPresentation="HorizontalStack">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" tooltipExpression="aql:'Sector &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_Sensor" label="Sensor" semanticCandidatesExpression="feature:components" domainClass="e4sm::Sensor" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Component']" childrenPresentation="VerticalStack">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Physical Component &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_Actuator" label="Actuator" semanticCandidatesExpression="feature:components" domainClass="e4sm::Actuator" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Component']" childrenPresentation="VerticalStack">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Physical Component &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_SoftwareComponent" label="Software Component" semanticCandidatesExpression="aql:self.components->select(e | e.oclIsTypeOf(e4sm::SoftwareComponent))" domainClass="e4sm::SoftwareComponent" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Component']" childrenPresentation="VerticalStack">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Physical Component &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_yellow']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_ExternalDependency" label="External Dependency" semanticCandidatesExpression="feature:components" domainClass="e4sm::ExternalDependency" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'External Dependency &quot;'+self.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <toolSections name="pd_creation_tool_physical" label="Creation Tools - Physical Elements">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="pd_create_physical_component" label="Physical Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::PhysicalComponent" referenceName="components">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Physical Component"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="pd_create_sensor" label="Sensor" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Sensor']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Sensor" referenceName="components">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Sensor"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="pd_create_actuator" label="Actuator" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Actuator']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Actuator" referenceName="components">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Actuator"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="pd_create_sector" label="Sector" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_Sector']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Sector" referenceName="sectors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Sector"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="pd_creation_tool" label="Creation Tools - Software Components">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="pd_create_mlc" label="Generic Software Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::SoftwareComponent" referenceName="components">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Software Component"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="ad_create_mld" label="Machine Learning Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::MachineLearningComponent" referenceName="components">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New ML Component"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="pd_create_heuristic" label="Heuristic" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_1']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Heuristic" referenceName="components">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Heuristic Component"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_sector_on_sector'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_physical_component_on_sector']" name="e4sm_diagram_2" label="Data Transfer Diagram (DTD)" titleExpression="aql:'[DTD] ' + self.oclAsType(e4sm::Package).name" initialisation="true" domainClass="e4sm::Package" enablePopupBars="true">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <metamodel href="http://de.tu-ilmenau/e4sm/execution/1.0.0#/"/>
      <metamodel href="http://de.tu-ilmenau/e4sm/security/1.0.0#/"/>
      <filters xsi:type="filter:CompositeFilterDescription" name="dtd_composite_filters" label="Hide contained components">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator']" semanticConditionExpression="aql:self.oclAsType(e4sm::Component).eContainer().oclIsTypeOf(e4sm::Sector) or self.oclAsType(e4sm::Component).eContainer().oclIsTypeOf(e4sm::Package)"/>
      </filters>
      <layout xsi:type="description_1:CompositeLayout"/>
      <defaultLayer name="Default">
        <nodeMappings name="package_input_pin" label="Input Pin" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_input_pin']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="aql:self.specifiesComponent.pins" semanticElements="aql:self.getOutgoingConnectors() + self.getIncomingConnectors()" domainClass="e4sm::InputPin">
          <style xsi:type="style:SquareDescription" labelSize="10" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="package_output_pin" label="Output Pin" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_output_pin']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="aql:self.specifiesComponent.pins" semanticElements="aql:self.getOutgoingConnectors() + self.getIncomingConnectors()" domainClass="e4sm::OutputPin">
          <style xsi:type="style:SquareDescription" labelSize="10" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="package_datastore" label="Data Store" semanticCandidatesExpression="feature:datastores" domainClass="e4sm::DataStore">
          <borderedNodeMappings name="package_datastore" label="Data Store" semanticCandidatesExpression="feature:datastores" domainClass="e4sm::DataStore">
            <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'«datastore»\n' + self.name" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="12" height="6">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'«datastore»\n' + self.name" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="12" height="6">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="d2_edge_physical_connector" label="Physical Connector" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" targetFinderExpression="feature:target" sourceFinderExpression="feature:source" targetExpression="var:self" domainClass="e4sm::PhysicalConnector" useDomainElement="true">
          <style sizeComputationExpression="3" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="aql: if (self.source.getOutgoingConnectors()->size()>1 and self.source.oclIsKindOf(e4sm::Pin)) then (if self.source.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::DUPLICATE or self.source.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE_AND_DUPLICATE then '«dupl»' else '' endif) else '' endif + if (self.target.getIncomingConnectors()->size()>1 and self.target.oclIsKindOf(e4sm::Pin)) then (if self.target.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE or self.target.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE_AND_DUPLICATE then '«merge»' else '' endif) else '' endif">
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="d2_edge_logical_connector" label="Logical Connector" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_output_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" targetFinderExpression="feature:target" sourceFinderExpression="feature:source" targetExpression="var:self" domainClass="e4sm::LogicalConnector" useDomainElement="true">
          <style sizeComputationExpression="3" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="aql: if (self.source.getOutgoingConnectors()->size()>1 and self.source.oclIsKindOf(e4sm::Pin)) then (if self.source.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::DUPLICATE or self.source.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE_AND_DUPLICATE then '«dupl»' else '' endif) else '' endif + if (self.target.getIncomingConnectors()->size()>1 and self.target.oclIsKindOf(e4sm::Pin)) then (if self.target.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE or self.target.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE_AND_DUPLICATE then '«merge»' else '' endif) else '' endif">
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="d2_edge_connector" label="Generic Connector" preconditionExpression="aql:self.oclIsTypeOf(e4sm::Connector)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" targetFinderExpression="feature:target" sourceFinderExpression="feature:source" targetExpression="var:self" domainClass="e4sm::Connector" useDomainElement="true">
          <style sizeComputationExpression="3" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="aql: if (self.source.getOutgoingConnectors()->size()>1 and self.source.oclIsKindOf(e4sm::Pin)) then (if self.source.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::DUPLICATE or self.source.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE_AND_DUPLICATE then '«dupl»' else '' endif) else '' endif + if (self.target.getIncomingConnectors()->size()>1 and self.target.oclIsKindOf(e4sm::Pin)) then (if self.target.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE or self.target.oclAsType(e4sm::Pin).raceSemantic=e4sm::RaceSemantic::MERGE_AND_DUPLICATE then '«merge»' else '' endif) else '' endif">
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="diag1_Component" label="Component" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_DTD_from_component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="aql:self.components->select(e | e.oclIsTypeOf(e4sm::Component))" semanticElements="aql:Sequence{self.pins.getOutgoingConnectors(), self.pins.getIncomingConnectors(), self}" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::Component" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_input_oins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']">
          <borderedNodeMappings name="diag2_input_pin" label="Input Pin" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_input_pin']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:pins" domainClass="e4sm::InputPin">
            <style xsi:type="style:BundledImageDescription" labelSize="9" showIcon="false" labelExpression="IN" tooltipExpression="feature:name" labelPosition="node">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="diag2_output_pin" label="Output Pin" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_output_pin']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:pins" domainClass="e4sm::OutputPin">
            <style xsi:type="style:BundledImageDescription" labelSize="9" showIcon="false" labelExpression="O" tooltipExpression="feature:name" labelPosition="node">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Component &quot;'+self.name +'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_PhisicalComponent" label="PhysicalComponent" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_DTD_from_component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="aql:self.components->select(e|e.oclIsTypeOf(e4sm::PhysicalComponent))" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::PhysicalComponent" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_input_oins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_physical_component_on_sector'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Physical Component &quot;'+self.name+'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_MachineLearningComponent" label="Machine Learning Component" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_DTD_from_component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="aql:self.components->select(e | e.oclIsTypeOf(e4sm::MachineLearningComponent))" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::MachineLearningComponent" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_input_oins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Machine Learning Component &quot;'+self.name+'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_ClassificationComponent" label="Classification Component" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_DTD_from_component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:components" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::ClassificationComponent" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_input_oins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Machine Learning Component &quot;'+self.name+'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_HeuristicComponent" label="Heuristic" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_DTD_from_component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:components" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::Heuristic" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_input_oins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Heuristic &quot;'+self.name+'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_Sector" label="Sector" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:sectors" domainClass="e4sm::Sector" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_sector_on_sector'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_physical_component_on_sector'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sector'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="14" showIcon="false" labelExpression="aql:'Sector &quot;' + self.name+'&quot;'" tooltipExpression="aql:'Sector &quot;'+self.name+'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_Sensor" label="Sensor" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:components" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::Sensor" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_physical_component_on_sector'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='lighter_orange']" labelSize="12" tooltipExpression="aql:'Sensor &quot;'+self.name+'&quot;'" backgroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='lighter_orange']" foregroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='lighter_orange']">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_Actuator" label="Actuator" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:components" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::Actuator" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_input_oins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_physical_component_on_sector'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='darker_orange']" labelSize="12" tooltipExpression="aql:'Actuator &quot;'+self.name+'&quot;'" backgroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='darker_orange']" foregroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='darker_orange']">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag1_SoftwareComponent" label="Software Component" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_DTD_from_component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="aql:self.components->select(e | e.oclIsTypeOf(e4sm::SoftwareComponent))" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::SoftwareComponent" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_input_oins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_drop_physical_component_on_sector'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Software Component &quot;'+self.name+'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_yellow']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag2_ExternalDependency" label="External Dependency" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_DTD_from_component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:components" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::ExternalDependency" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'External Dependency &quot;'+self.name+'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="diag2_Function" label="Function" detailDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_DTD_from_component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='create_new_CSD_from_component']" navigationDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_diagram'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='navigate_to_cs_diagram']" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='action_delete_component']" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag_2_label_edition']" semanticCandidatesExpression="feature:components" doubleClickDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='security_double_click']" domainClass="e4sm::Function" reusedBorderedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" dropDescriptions="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_input_oins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='diag2_allow_moving_output_pins'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@toolSections.2/@ownedTools[name='drop_datastores']" reusedNodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']" reusedContainerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" tooltipExpression="aql:'Function &quot;'+self.name+'&quot;'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <toolSections name="d2_create_tools" label="Create Connectors">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="d2_create_connector" label="Generic Connector" precondition="aql:preSource.eContainer()&lt;>preTarget.eContainer()" edgeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_connector']" extraTargetMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.eContainer(e4sm::Package)">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:target.oclIsKindOf(e4sm::Component)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="ip"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.eContainer(e4sm::Package)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Connector" referenceName="connectors">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:ip"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:instance.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:target.oclIsKindOf(e4sm::Pin)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Connector" referenceName="connectors">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:instance.nameFactory()"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="d2_create_physical_connector" label="Physical Connector" precondition="aql:preSource.canPhysicalConnectorConnectSourceToTarget(preTarget)" edgeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_physical_connector']" connectionStartPrecondition="aql:(preSource.oclIsTypeOf(e4sm::OutputPin) and preSource.eContainer().oclIsKindOf(e4sm::PhysicalComponent)) or preSource.oclIsTypeOf(e4sm::DataStore)">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.eContainer(e4sm::Package)">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::PhysicalConnector" referenceName="connectors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:instance.nameFactory()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="d2_create_logical_connector" label="Logical Connector" precondition="aql:preSource&lt;>preTarget and ((preSource.oclIsTypeOf(e4sm::DataStore) or preTarget.oclIsTypeOf(e4sm::DataStore)) or  preSource.eContainer()&lt;>preTarget.eContainer())" edgeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_logical_connector']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.eContainer(e4sm::Package)">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::LogicalConnector" referenceName="connectors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:instance.nameFactory()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_input_pin" label="Input Pin" precondition="aql:container.oclIsTypeOf(e4sm::Sensor)=false" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:instance.nameFactory()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_output_pin" label="Output Pin" precondition="aql:container.oclIsTypeOf(e4sm::Actuator)=false" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:instance.nameFactory()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="diag2_create_components" label="Create Components">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="pd_create_sector" label="Sector" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sector']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Sector" referenceName="sectors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Sector"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="pd_create_component" label="Generic Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/Component.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Component" referenceName="components">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Component"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="tool_group_create_physical_components" label="Physical Components">
            <tools xsi:type="tool:ContainerCreationDescription" name="pd_create_physical_component" label="Physical Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/PhysicalComponent.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::PhysicalComponent" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Physical Component"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ContainerCreationDescription" name="pd_create_sensor" label="Sensor" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/Sensor.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Sensor" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Sensor"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ContainerCreationDescription" name="pd_create_actuator" label="Actuator" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/Actuator.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Actuator" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Actuator"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="diag2_createSoftwareComponents" label="Create Software Components">
            <tools xsi:type="tool:ContainerCreationDescription" name="pd_create_mlc" label="Software Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/SoftwareComponent.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::SoftwareComponent" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Software Component"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ContainerCreationDescription" name="ad_create_mld" label="Machine Learning Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/MachineLearningComponent.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::MachineLearningComponent" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New ML Component"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ContainerCreationDescription" name="pd_create_heuristic" label="Heuristic" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/Heuristic.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Heuristic" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Heuristic"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ContainerCreationDescription" name="pd_create_external_dependency" label="External Dependency" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/ExternalDependency.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::ExternalDependency" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New External Dependency"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ContainerCreationDescription" name="pd_create_function" label="Function" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/Function.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Function" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Function"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ContainerCreationDescription" name="ad_create_binary_classification" label="Binary Classification Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/BinaryClassificationComponent.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::BinaryClassificationComponent" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Binary Classification Component"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ContainerCreationDescription" name="ad_create_multiclass_classification" label="Multiclass Classification Component" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/MulticlassClassificationComponent.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::MulticlassClassificationComponent" referenceName="components">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Multiclass Classification Component"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins" variableName="outputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:outputPin.nameFactory()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins" variableName="inputPin">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:inputPin.nameFactory()"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="tool_create_datastore" label="Data Store" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::DataStore" referenceName="datastores">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="New Software Component"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="diag2_invisible_tools" label="Invisible Tools">
          <ownedTools xsi:type="tool:DiagramCreationDescription" documentation="Right click on a software component.&#xD;&#xA;New > Component Specification" name="create_new_DTD_from_component" label="Component Specification" precondition="aql:self.specifiedInPackage = null and self.components->isEmpty() and self.execution = null" elementsToSelect="var:newPackage" titleExpression="aql:'[DTD] Specify ' + self.oclAsType(e4sm::Component).name" diagramDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="componentPackage" valueExpression="aql:self.eContainer(e4sm::Package)">
                  <subModelOperations xsi:type="tool_1:Let" variableName="selectedComponent" valueExpression="var:self">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:componentPackage">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Package" referenceName="packages" variableName="newPackage">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="specifiesComponent" valueExpression="var:selectedComponent"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Specify ' + selectedComponent.name"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="navigate_to_diagram" label="Navigate to Diagram" browseExpression="feature:specifiedInPackage" diagramDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="diag_2_label_edition" label="Edit Labels">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="diag2_drop_physical_component_on_sector" label="Drop Physical Component" mappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="diag2_allow_moving_input_oins" label="Allow Moving Input Pins" mappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin']" moveEdges="true">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="pins" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="diag2_allow_moving_output_pins" label="Allow Moving Output Pins" mappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']" moveEdges="true">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="pins" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="diag2_drop_sector_on_sector" label="Drop Sector on Sector" mappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sector']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="sectors"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="drop_datastores" label="Datastores" mappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="datastores"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:GroupMenu" documentation="Includes all of the possible generalisation or specialisation options for the many different component types." name="change_elements_type_group" label="Change Type" precondition="aql:self.oclIsKindOf(e4sm::Component)" locationURI="menu:editMenu">
            <itemDescriptions xsi:type="tool_1:PopupMenu" name="change_specific_component_to_component" label="↑ Make more Generic">
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option for software and physical components to be transformed into a generic component." name="change_to_component_action" label="To Component" precondition="aql:container.oclIsTypeOf(e4sm::SoftwareComponent) or container.oclIsTypeOf(e4sm::PhysicalComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/Component.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformToComponent(views)"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform any component, which directly inherits from the software component, into a software component." name="change_to_software_component_action" label="To Software Component" precondition="aql:container.oclIsKindOf(e4sm::SoftwareComponent) and not container.oclIsTypeOf(e4sm::SoftwareComponent) and not container.oclIsTypeOf(e4sm::BinaryClassificationComponent) and not container.oclIsTypeOf(e4sm::MulticlassClassificationComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/SoftwareComponent.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformToSoftwareComponent(views)"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform any component, which directly inherits from the physical component, into a physical component." name="change_to_physical_component_action" label="To Physical Component" precondition="aql:container.oclIsKindOf(e4sm::PhysicalComponent) and not container.oclIsTypeOf(e4sm::PhysicalComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/PhysicalComponent.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformToPhysicalComponent()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option for any component which inherits from the machine learning component &#xD;&#xA;to be transformed into a machine learning component." name="change_to_machine_learning_component_action" label="To Machine Learning Component" precondition="aql:container.oclIsKindOf(e4sm::MachineLearningComponent) and not container.oclIsTypeOf(e4sm::MachineLearningComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/MachineLearningComponent.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformToMachineLearningComponent(views)"/>
                </initialOperation>
              </menuItemDescription>
            </itemDescriptions>
            <itemDescriptions xsi:type="tool_1:PopupMenu" name="change_component_to_software_component" label="↓ Make more Specific">
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a generic component into a software component." name="change_to_software_component_action" label="To Software Component" precondition="aql:container.oclIsTypeOf(e4sm::Component)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/SoftwareComponent.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToSoftwareComponent()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a generic component into a physical component." name="change_to_physical_component_action" label="To Physical Component" precondition="aql:container.oclIsTypeOf(e4sm::Component)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/PhysicalComponent.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToPhysicalComponent()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a physical component into a sensor component." name="change_to_sensor_action" label="To Sensor" precondition="aql:container.oclIsTypeOf(e4sm::PhysicalComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/Sensor.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToSensor()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a physical component into a actuator component." name="change_to_actuator_action" label="To Actuator" precondition="aql:container.oclIsTypeOf(e4sm::PhysicalComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/Actuator.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:transformDownToActuator"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a software component into a machine learning component." name="change_to_machine_learning_component_action" label="To Machine Learning Component" precondition="aql:container.oclIsTypeOf(e4sm::SoftwareComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/MachineLearningComponent.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToMachineLearningComponent()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a software component into a heuristic component." name="change_to_heuristic_action" label="To Heuristic" precondition="aql:container.oclIsTypeOf(e4sm::SoftwareComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/Heuristic.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToHeuristic()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a software component into a function component." name="change_to_function_action" label="To Function" precondition="aql:container.oclIsTypeOf(e4sm::SoftwareComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/Function.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToFunction()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a software component into a external dependency component." name="change_to_external_dependency_action" label="To External Dependency" precondition="aql:container.oclIsTypeOf(e4sm::SoftwareComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/ExternalDependency.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToExternalDependency()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a machine learning component into a binary classification component." name="change_to_binary_classification_component_action" label="To Binary Classification Component" precondition="aql:container.oclIsTypeOf(e4sm::MachineLearningComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/BinaryClassificationComponent.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToBinaryClassificationComponent()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" documentation="Provides the option to transform a machine learning component into a mutliclass classification component." name="change_to_multiclass_classification_component_action" label="To Multiclass Classification Component" precondition="aql:container.oclIsTypeOf(e4sm::MachineLearningComponent)" icon="/e4sm.de.metamodel.edit/icons/full/obj16/MulticlassClassificationComponent.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.transformDownToMulticlassClassificationComponent()"/>
                </initialOperation>
              </menuItemDescription>
            </itemDescriptions>
          </ownedTools>
          <ownedTools xsi:type="tool_1:GroupMenu" documentation="Contains the transformation,analysis and simulation options." name="start_simulation_group" label="Simulations" locationURI="menu:root">
            <itemDescriptions xsi:type="tool_1:PopupMenu" documentation="Provides the transformation options for the graphical editor." name="popup_compute_dependency_tree" label="Transformations">
              <menuItemDescription xsi:type="tool_1:OperationAction" name="compute_package_dependency_graph" label="Package Dependency Graph" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.target.oclAsType(e4sm::Package).computePackageDependencyGraph()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" name="compute_model_dependency_graph" label="Model Dependency Graph" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.target.oclAsType(e4sm::Package).eContainer(e4sm::Model).computeModelDependencyGraph()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" name="compute_model_network" label="Model Network" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.target.oclAsType(e4sm::Package).eContainer(e4sm::Model).generateNetwork().exportToDOTFile('network.gv')"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" name="compute_package_network" label="Package Network" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.target.oclAsType(e4sm::Package).generateNetwork().exportToDOTFile('network.gv')"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" name="compute_module_documentation" label="Generate Documentation" precondition="false" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.target.eContainer(e4sm::Model).generateDocumentation()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" name="compute_package_SCPN" label="to SCPN" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:Let" variableName="transfResult" valueExpression="aql:diagram.target.oclAsType(e4sm::Package).toSCPN('')">
                      <subModelOperations xsi:type="tool_1:Switch">
                        <cases conditionExpression="aql:transfResult=0">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN - Success">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Transformation and optimization was successful! Output was placed into the SCPN folder." semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </cases>
                        <cases conditionExpression="aql:transfResult=1">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN - Error case 1">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Package name was empty, transformation canceled!" semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </cases>
                        <cases conditionExpression="aql:transfResult=2">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN - Error case 2">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Failed to save output SCPN!" semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </cases>
                        <cases conditionExpression="aql:transfResult=3">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN - Error case 3">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Transformation failed! (generic error!)" semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </cases>
                        <cases conditionExpression="aql:transfResult=4">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN - Error case 4">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="npm could not be found, transformation has been canceled!" semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </cases>
                        <cases conditionExpression="aql:transfResult=5">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN - Error case 5">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Command tn-fix-xml could not be found, transformation has been canceled!" semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </cases>
                        <cases conditionExpression="aql:transfResult=6">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN - Error case 6">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Transformation was successful, but the optimization failed!" semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </cases>
                        <cases conditionExpression="aql:transfResult=7">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN - Error case 7">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Generic Error, unknown cause!" semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </cases>
                        <default>
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="toSCPN">
                            <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="An unexpected error occured while trying to transform! No case matched!" semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </default>
                      </subModelOperations>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescription>
            </itemDescriptions>
            <itemDescriptions xsi:type="tool_1:PopupMenu" documentation="Provides the analysis options for the graphical editor." name="popup_start_analysis" label="Start Analysis">
              <menuItemDescription xsi:type="tool_1:OperationAction" name="analysis_time_analysis_start" label="▶ Time Analysis" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.target.oclAsType(e4sm::Package).startAnalysisOnPackage('/E4SM_Editor_Example/Results','TimeAnalysis')"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" name="analysis_bandwidth_analysis_start" label="▶ Bandwidth Analysis" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.target.oclAsType(e4sm::Package).computePackageDependencyGraph()"/>
                </initialOperation>
              </menuItemDescription>
              <menuItemDescription xsi:type="tool_1:OperationAction" name="analysis_error_propagation_analysis_start" label="▶ Error Propagation Analysis" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.target.oclAsType(e4sm::Package).computePackageDependencyGraph()"/>
                </initialOperation>
              </menuItemDescription>
            </itemDescriptions>
            <itemDescriptions xsi:type="tool_1:PopupMenu" documentation="Provides the simulation option(s) for the graphical editor." name="popup_simulation" label="Start Simulation">
              <menuItemDescription xsi:type="tool_1:GroupMenu" name="timenetGroup" label="Timenet Options">
                <itemDescriptions xsi:type="tool_1:OperationAction" documentation="Starts the simulation via the TimenetSimRunner class." name="timenet_simulation_start" label="Timenet" icon="/e4sm.de.metamodel.design/icons/specified.gif">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:Let" variableName="simResult" valueExpression="aql:diagram.target.oclAsType(e4sm::Package).runner()">
                        <subModelOperations xsi:type="tool_1:Switch">
                          <cases conditionExpression="aql:simResult=0">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="simRunner - Success">
                              <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                                <initialOperation/>
                              </buttons>
                              <page name="Default Page" labelExpression="Timenet Simulation was successfully started in the background!" semanticCandidateExpression="var:self"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:simResult=1">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="simRunner - Error Case 1">
                              <buttons labelExpression="Got it" default="true" closeDialogOnClick="true">
                                <initialOperation/>
                              </buttons>
                              <page name="Default Page" labelExpression="Package name is empty, process canceled" semanticCandidateExpression="var:self"/>
                            </subModelOperations>
                          </cases>
                          <default>
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="simRunner">
                              <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                                <initialOperation/>
                              </buttons>
                              <page name="Default Page" labelExpression="Unexpected Error!" semanticCandidateExpression="var:self"/>
                            </subModelOperations>
                          </default>
                        </subModelOperations>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </itemDescriptions>
              </menuItemDescription>
            </itemDescriptions>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" documentation="Prevent deleting the last output pin from a sensor" name="action_delete_output_pin" label="Delete Output Pin" precondition="aql: not self.eContainer().oclIsTypeOf(e4sm::Sensor) or (self.eContainer().oclIsTypeOf(e4sm::Sensor) and self.eContainer().oclAsType(e4sm::Sensor).pins->filter(e4sm::OutputPin)->size()>1)">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:For" expression="aql:self.getIncomingConnectors()" iteratorName="incomingConnector">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="aql:self.getOutgoingConnectors()" iteratorName="outgoingConnector">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" documentation="Prevent deleting the last input pin from an actuator" name="action_delete_input_pin" label="Delete Input Pin" precondition="aql: not self.eContainer().oclIsTypeOf(e4sm::Actuator) or (self.eContainer().oclIsTypeOf(e4sm::Actuator) and self.eContainer().oclAsType(e4sm::Actuator).pins->filter(e4sm::InputPin)->size()>1)">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:For" expression="aql:self.getIncomingConnectors()" iteratorName="incomingConnector">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:incomingConnector.eContainer(e4sm::Package).connectors">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:incomingConnector"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="aql:self.getOutgoingConnectors()" iteratorName="outgoingConnector">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.getIncomingConnectors()" iteratorName="incomingConnector">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.getOutgoingConnectors()" iteratorName="outgoingConnector">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="action_delete_component" label="Delete Component">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:For" expression="feature:pins" iteratorName="pin">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.getIncomingConnectors()" iteratorName="incomingConnector">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.getOutgoingConnectors()" iteratorName="outgoingConnector">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" documentation="Right click on a software component.&#xD;&#xA;New > Component Specification" name="create_new_CSD_from_component" label="Component Execution Diagram" precondition="aql:self.execution = null and self.components->size()=0 and self.specifiedInPackage = null" titleExpression="aql:'[CSD] Specify ' + self.oclAsType(e4sm::Component).name + ' execution'" diagramDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']">
            <initialOperation/>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="navigate_to_cs_diagram" label="Navigate to CS Diagram" browseExpression="feature:specifiedInPackage" diagramDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description:SemanticBasedDecoration" name="Arrow on Specified Components" position="SOUTH_EAST" preconditionExpression="feature:specifiedInPackage" imageExpression="/e4sm.de.metamodel.design/icons/specified.gif" tooltipExpression="aql:'This component is refined by the package\n' + self.specifiedInPackage.name" domainClass="e4sm::Component"/>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component) and self.oclAsType(e4sm::Component).components->isEmpty()">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" referenceName="labelBorderStyle">
              <value href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Connector) and ((self.source.oclIsTypeOf(e4sm::InputPin) and self.target.oclIsTypeOf(e4sm::InputPin)) or (self.source.oclIsTypeOf(e4sm::OutputPin) and self.target.oclIsTypeOf(e4sm::OutputPin)))">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_connector']/@style" applyOnAll="true" attributeName="targetArrow" value="NoDecoration"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_connector']/@style" applyOnAll="true" attributeName="lineStyle" value="solid"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Pin) and self.oclAsType(e4sm::Pin).gatewayPin">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']/@style" attributeName="labelExpression" value="G"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
      <additionalLayers name="d2_layer_generic_elements" label="Generic Elements">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsTypeOf(e4sm::Connector)">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_connector']/@style" referenceName="strokeColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsTypeOf(e4sm::SoftwareComponent) or self.oclIsTypeOf(e4sm::Component)">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']/@style" applyOnAll="true" referenceName="backgroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']/@style" applyOnAll="true" referenceName="borderColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="d2_layer_responsibilities" label="Responsibilities">
        <toolSections name="responsibilities_tools" label="Responsibility Tools">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="select_responsibile" label="Select Responsible" precondition="aql:self.oclIsKindOf(e4sm::Component)" candidatesExpression="aql:container.eContainer(e4sm::Model).actors->filter(e4sm::Person)" message="Please select the Main Responsibile" iconPath="/e4sm.de.metamodel.edit/icons/full/obj16/Person.gif" windowTitle="Select Responsible">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.oclAsType(e4sm::Component)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="mainResponsible" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:GroupMenu" name="responsibilities_tool_group" label="Manage Responsible People" precondition="aql:self.oclIsKindOf(e4sm::Component)" locationURI="menu:editMenu">
            <itemDescriptions xsi:type="tool_1:PopupMenu" name="remove_responsible_popup" label="Manage Responsible">
              <menuItemDescription xsi:type="tool_1:OperationAction" name="remove_responsible_action" label="Remove Responsible" precondition="aql:self.oclAsType(e4sm::Component).mainResponsible&lt;>null" icon="/org.eclipse.sirius.diagram.ui/icons/full/obj16/DeleteElementDescription.gif">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="mainResponsible" valueExpression="aql:null"/>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescription>
            </itemDescriptions>
          </ownedTools>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description:SemanticBasedDecoration" name="Main Responsible" position="SOUTH_EAST" distributionDirection="HORIZONTAL" preconditionExpression="aql:self.computeMainResponsible()&lt;>null" imageExpression="aql:self.eContainer(e4sm::Model).personsPicturesPath + self.computeMainResponsible().pictureFileName" tooltipExpression="aql:self.name" domainClass="e4sm::Component"/>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component) and self.oclAsType(e4sm::Component).computeMainResponsible() = null">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" referenceName="foregroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']/@style" referenceName="borderColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component) and self.oclAsType(e4sm::Component).computeMainResponsible() &lt;> null">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelExpression" value="aql: let c=self.oclAsType(e4sm::Component) in let responsible = c.computeMainResponsible() in c.name + '\n(' + responsible.surname + ' ' + responsible.name.toString().substring(1,1) + '.)'"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelSize" value="11"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelAlignment" value="LEFT"/>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="d2_layer_readability" label="Improve Readability">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component)">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelFormat" value="bold"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelSize" value="13"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Sector)">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelFormat" value="bold"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelSize" value="14"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Pin)">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelSize" value="9"/>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="d2_layer_components_specification" label="Components Specification">
        <toolSections name="components_specification_tools" label="Component Specification Tools">
          <ownedTools xsi:type="tool_1:ToolDescription" name="open_editor" label="Open Editor" iconPath="/org.eclipse.sirius.diagram.ui/icons/full/obj16/Note.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaAction" name="open_embedded_editor_action" label="Open Embedded Editor" id="e4sm.de.metamodel.design.OpenEmbeddedEditor"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component) and self.execution->size()=0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" referenceName="foregroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']/@style" referenceName="borderColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="slow_flows_layer_id" label="Slow Flows">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Connector)">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_connector']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_logical_connector']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_physical_connector']/@style" referenceName="strokeColor" value="//@userColorsPalettes[name='E4SMColors']/@entries[name='edge_flow_color']"/>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="d2_layer_execution_times" label="Execution Times">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component)">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelExpression" value="aql:self.oclAsType(e4sm::Component).timeFunction.getString()"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component) and self.timeFunction->size()=0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']/@style" applyOnAll="true" referenceName="backgroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="true">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_connector']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_logical_connector']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_physical_connector']/@style" applyOnAll="true" attributeName="sizeComputationExpression" value="0"/>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="dtd_layer_types" label="Missing Types">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::DataNode) and self.type->size()=0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_input_pin']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@borderedNodeMappings[name='diag2_output_pin']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_input_pin']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_output_pin']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_datastore']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="security_layer" label="Security">
        <nodeMappings name="cve_node" label="CVE" semanticCandidatesExpression="aql:self.eContainer(e4sm::Model).securityThreatsDefinition.cves" domainClass="security::CVE">
          <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:self.cveId" tooltipExpression="feature:description" sizeComputationExpression="5" labelPosition="node" resizeKind="NORTH_SOUTH" horizontalDiameterComputationExpression="aql:self.cveId.size()" verticalDiameterComputationExpression="4">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="affects_arrow" label="Affects" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@nodeMappings[name='cve_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor']" targetFinderExpression="aql:self.affectsComponents" reconnections="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@toolSections.0/@ownedTools[name='reconnect_affects']">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="Security Tools" label="Security Tools">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_cve_tool" label="Create CVE" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@nodeMappings[name='cve_node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer(e4sm::Model).securityThreatsDefinition">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="security::CVE" referenceName="cves" variableName="newCVE">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="cveId" valueExpression="CVE-2023-12345"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="import_cve_tool" label="Import CVE" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@nodeMappings[name='cve_node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer(e4sm::Model).securityThreatsDefinition">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="security::CVE" referenceName="cves" variableName="newCVE">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="cveId" valueExpression="CVE-2023-12345"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="create_affect_arc" label="Link CVE to Component" edgeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@edgeMappings[name='affects_arrow']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="affectsComponents" valueExpression="aql:self.affectsComponents->including(target)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="reconnect_affects" label="Reconnect Affects Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="affectsComponents" elementExpression="var:source"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="affectsComponents" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="security_double_click" label="Double Click" mappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Toggle Security Elements for the component">
                  <buttons labelExpression="Toggle is Asset" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer(e4sm::Model).securitySpecification">
                        <subModelOperations xsi:type="tool_1:Switch">
                          <cases conditionExpression="aql:self.assetDefinitions.component->includes(element)">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="assetDefinitions" elementExpression="aql:self.assetDefinitions->select(ad|ad.component=element)->first()"/>
                          </cases>
                          <default>
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="security::AssetDefinition" referenceName="assetDefinitions" variableName="newAsset">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="component" valueExpression="var:element"/>
                            </subModelOperations>
                          </default>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <buttons labelExpression="Toggle is Attack Surface" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer(e4sm::Model).securitySpecification">
                        <subModelOperations xsi:type="tool_1:Switch">
                          <cases conditionExpression="aql:self.attackSurfaces.component->includes(element)">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="attackSurfaces" elementExpression="aql:self.attackSurfaces->select(ad|ad.component=element)->first()"/>
                          </cases>
                          <default>
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="security::AttackSurface" referenceName="attackSurfaces" variableName="newAttackSurface">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="component" valueExpression="var:element"/>
                            </subModelOperations>
                          </default>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" labelExpression="feature:name" domainClass="e4sm::Component" semanticCandidateExpression="var:self"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component) and self.eContainer(e4sm::Model).securitySpecification.assetDefinitions.component->includes(self)">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor']/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='E4SMColors']/@entries[name='asset_color']"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelExpression" value="aql:'«asset» ' + self.name"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(e4sm::Component) and self.eContainer(e4sm::Model).securitySpecification.attackSurfaces.component->includes(self)">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Actuator']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_ClassificationComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_ExternalDependency']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag2_Function']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_HeuristicComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_MachineLearningComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_PhisicalComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_SoftwareComponent']/@style //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Sensor']/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='E4SMColors']/@entries[name='attacksurface_color']"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@containerMappings[name='diag1_Component']/@style" applyOnAll="true" attributeName="labelExpression" value="aql:'«surface» ' + self.name"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:true">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_connector']/@style/@centerLabelStyleDescription //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_logical_connector']/@style/@centerLabelStyleDescription //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@edgeMappings[name='d2_edge_physical_connector']/@style/@centerLabelStyleDescription" attributeName="labelExpression" value="aql:''"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclAsType(security::CVE).cvss>0.0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@nodeMappings[name='cve_node']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclAsType(security::CVE).cvss>=4.0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@nodeMappings[name='cve_node']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclAsType(security::CVE).cvss>=7.0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@nodeMappings[name='cve_node']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclAsType(security::CVE).cvss>=9.0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@additionalLayers[name='security_layer']/@nodeMappings[name='cve_node']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="[CSD]" label="Component Specification Diagram [CSD]" domainClass="e4sm::Component" enablePopupBars="true">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <metamodel href="http://de.tu-ilmenau/e4sm/execution/1.0.0#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <nodeMappings name="decisionNode_el" label="DecisionNode" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::DecisionNode)" domainClass="execution::DecisionNode">
          <style xsi:type="style:LozengeNodeDescription" labelSize="12" labelExpression="" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="flow_final_element" label="Flow Final" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::FlowFinal)" domainClass="execution::FlowFinal">
          <style xsi:type="style:BundledImageDescription" labelSize="12" showIcon="false" labelExpression="discard" resizeKind="NSEW" shape="stroke">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="fork_element" label="Fork Node" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::ForkNode)" domainClass="execution::ForkNode">
          <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="" labelPosition="node" resizeKind="NORTH_SOUTH" width="1" height="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="merge_element" label="Merge Node" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::MergeNode)" domainClass="execution::MergeNode">
          <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="" labelPosition="node" resizeKind="NORTH_SOUTH" width="1" height="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="imported_input_pin" label="Input Pin (imported)" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@toolSections.1/@ownedTools[name='csd_rename_tool']" semanticCandidatesExpression="feature:pins" inheritsAncestorFilters="false" importedMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_input_pin']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="ouput_pin_imported" label="Output Pin (imported)" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@toolSections.1/@ownedTools[name='csd_rename_tool']" semanticCandidatesExpression="feature:pins" importedMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='e4sm_diagram_2']/@defaultLayer/@nodeMappings[name='package_output_pin']"/>
        <nodeMappings name="variable_node" label="Variable" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@toolSections.1/@ownedTools[name='csd_rename_tool']" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::Variable)" domainClass="execution::Variable">
          <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:self.name + if self.expression.getTangibleChild().oclIsKindOf(core::LiteralSpecification) then '=' + self.expression.getTangibleChild().value else '' endif" tooltipExpression="Variable" sizeComputationExpression="-1" labelPosition="node" resizeKind="EAST_WEST" width="8" height="6">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="const_node" label="Const" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@toolSections.1/@ownedTools[name='csd_rename_tool']" semanticCandidatesExpression="aql:self.execution.elements->select(e | e.oclIsTypeOf(execution::Const))" domainClass="execution::Const">
          <style xsi:type="style:SquareDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="aql:self.name + if self.expression.getTangibleChild().oclIsKindOf(core::LiteralSpecification) then '=' + self.expression.getTangibleChild().value else '' endif" tooltipExpression="Constant" sizeComputationExpression="-1" labelPosition="node" resizeKind="EAST_WEST" width="8" height="6">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="addition_node" label="Addition Node" preconditionExpression="feature:addition" semanticCandidatesExpression="aql:self.execution.elements.eAllContents()" domainClass="execution::Addition">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="addition" sizeComputationExpression="4" labelPosition="node" workspacePath="/e4sm.de.metamodel.design/icons/plus.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="subtraction_node" label="Subtraction Node" preconditionExpression="feature:subtraction" semanticCandidatesExpression="aql:self.execution.elements.eAllContents()" domainClass="execution::Addition">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="-" sizeComputationExpression="4" labelPosition="node" workspacePath="/e4sm.de.metamodel.design/icons/minus.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="multiplication_node" label="Multiplication Node" preconditionExpression="feature:multiplication" semanticCandidatesExpression="aql:self.execution.elements.eAllContents()" domainClass="execution::Multiplication">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="*" sizeComputationExpression="4" labelPosition="node" workspacePath="/e4sm.de.metamodel.design/icons/multiplication.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="division_node" label="Division Node" preconditionExpression="feature:division" semanticCandidatesExpression="aql:self.execution.elements.eAllContents()" domainClass="execution::Multiplication">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="/" sizeComputationExpression="4" labelPosition="node" workspacePath="/e4sm.de.metamodel.design/icons/division.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="literal_integer_node" label="Literal Integer Node" semanticCandidatesExpression="aql:self.execution.elements.eAllContents(core::LiteralInteger)->select(e|not e.getActualParent().oclIsKindOf(execution::ReferenceableItem))" domainClass="core::LiteralInteger">
          <style xsi:type="style:EllipseNodeDescription" labelSize="9" showIcon="false" labelExpression="feature:value" tooltipExpression="feature:value" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="aql:self.value.toString().size()+2" verticalDiameterComputationExpression="3">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="assignment_node" label="Assignment Node" semanticCandidatesExpression="aql:self.execution.eAllContents()" domainClass="execution::Assignment">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="equals" sizeComputationExpression="4" labelPosition="node" workspacePath="/e4sm.de.metamodel.design/icons/equals.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="literal_double_node" label="Literal Double Node" semanticCandidatesExpression="aql:self.execution.elements.eAllContents(core::LiteralDouble)" domainClass="core::LiteralDouble">
          <style xsi:type="style:EllipseNodeDescription" labelSize="9" showIcon="false" labelExpression="feature:value" tooltipExpression="feature:value" labelPosition="node" resizeKind="NSEW" color="//@userColorsPalettes[name='E4SMColors']/@entries[name='ilm_orange_light']" horizontalDiameterComputationExpression="aql:self.value.toString().size()+2" verticalDiameterComputationExpression="3">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="assignableElementReference_node" label="Assignable Element Ref" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@toolSections.1/@ownedTools[name='csd_rename_tool']" semanticCandidatesExpression="aql:self.execution.elements.eAllContents()->filter(execution::AssignableElementReference)" domainClass="execution::AssignableElementReference">
          <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'ref: ' + self.ref.oclAsType(core::NamedElement).name" tooltipExpression="Variable ref" sizeComputationExpression="-1" labelPosition="node" resizeKind="EAST_WEST" width="8" height="6" color="//@userColorsPalettes[name='E4SMColors']/@entries[name='ilm_green']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="flow_element" label="Flow" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::Flow)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported']" targetFinderExpression="feature:target" sourceFinderExpression="feature:source" domainClass="execution::Flow" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="flowFinal" label="FlowFinalEdge" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::FlowFinal)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='flow_final_element']" targetFinderExpression="var:self" sourceFinderExpression="feature:source" domainClass="execution::FlowFinal" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="forkEdgeIn" label="Fork Edge In" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::ForkNode)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='fork_element']" targetFinderExpression="var:self" sourceFinderExpression="feature:source" domainClass="execution::ForkNode" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="forkEdgeOut" label="Fork Edge Out" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::ForkNode)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='fork_element']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='decisionNode_el'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported']" targetFinderExpression="feature:targets" sourceFinderExpression="var:self" domainClass="execution::ForkNode" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="mergeEdgeIn" label="Merge Edge In" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::MergeNode)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='merge_element']" targetFinderExpression="var:self" sourceFinderExpression="feature:sources" domainClass="execution::MergeNode" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="mergeEdgeOut" label="Merge Edge Out" semanticCandidatesExpression="aql:self.execution.elements->filter(execution::MergeNode)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='merge_element']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='decisionNode_el'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported']" targetFinderExpression="feature:target" sourceFinderExpression="var:self" domainClass="execution::MergeNode" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="AdditionIn" label="Addition In" semanticCandidatesExpression="aql:self.execution.elements.eAllContents(execution::Addition)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='addition_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='const_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='division_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='literal_integer_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='multiplication_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='subtraction_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='literal_double_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='addition_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='subtraction_node']" targetFinderExpression="var:self" sourceFinderExpression="aql:Sequence{self.left.getTangibleChild(),self.right.getTangibleChild()}" domainClass="execution::Addition" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Multiplication_out" label="Multiplication Out" semanticCandidatesExpression="aql:self.execution.elements.eAllContents()" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='multiplication_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='division_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='const_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='assignment_node']" targetFinderExpression="aql:self.getActualParent()" sourceFinderExpression="var:self" domainClass="execution::Multiplication" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Addition_out" label="Addition Out" semanticCandidatesExpression="aql:self.execution.elements.eAllContents(execution::Addition)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='addition_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='subtraction_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='const_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='assignment_node']" targetFinderExpression="aql:self.getActualParent()" sourceFinderExpression="var:self" domainClass="execution::Addition" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="MultiplicationIn" label="Multiplication In" semanticCandidatesExpression="aql:self.execution.elements.eAllContents(execution::Multiplication)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='addition_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='const_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='division_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='literal_integer_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='multiplication_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='subtraction_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='literal_double_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='multiplication_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='division_node']" targetFinderExpression="var:self" sourceFinderExpression="aql:Sequence{self.left.getTangibleChild(), self.right, self.right.getTangibleChild()}" domainClass="execution::Multiplication" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="variable_reference_edge" label="Variable Reference" semanticCandidatesExpression="aql:self.execution.elements.eAllContents(execution::VariableRef)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='const_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='addition_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='const_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='decisionNode_el'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='division_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='flow_final_element'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='fork_element'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='literal_integer_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='merge_element'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='multiplication_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='subtraction_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='literal_double_node']" targetFinderExpression="aql:self.getActualParent()" sourceFinderExpression="feature:variable" domainClass="execution::VariableRef" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Assignment_out" label="Assignment Out" semanticCandidatesExpression="aql:self.execution.eAllContents()" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='assignment_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='assignableElementReference_node']" targetFinderExpression="aql:self.target" sourceFinderExpression="var:self" domainClass="execution::Assignment" useDomainElement="true">
          <style strokeColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='ilm_green']" lineStyle="dash" sizeComputationExpression="2">
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="AssignmentIn" label="Assignment In" semanticCandidatesExpression="aql:self.execution.eAllContents(execution::Assignment)" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='addition_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='const_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='division_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='literal_integer_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='multiplication_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='subtraction_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='literal_double_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='assignment_node']" targetFinderExpression="var:self" sourceFinderExpression="aql:self.expression.getTangibleChild()" domainClass="execution::Assignment" useDomainElement="true">
          <style strokeColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='ilm_blue']" lineStyle="dash" sizeComputationExpression="2">
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="assignableElementReference_edge " label="Assignable Element Reference edge" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='assignableElementReference_node']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node'] //@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported']" targetFinderExpression="aql:self.ref">
          <style targetArrow="NoDecoration">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="tools_create_elements" label="Create Elements">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_const" label="Create Const" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='const_node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.execution">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="execution::Const" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="myConst"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_variable" label="Create Variable" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='variable_node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.execution">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="execution::Variable" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="myVar"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_input_pin" label="Create Input Pin" precondition="aql:not container.oclIsTypeOf(e4sm::Sensor)" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='imported_input_pin']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::InputPin" referenceName="pins">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="myInPin"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_output_pin" label="Create Output Pin" precondition="aql:not container.oclIsTypeOf(e4sm::Actuator)" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='[CSD]']/@defaultLayer/@nodeMappings[name='ouput_pin_imported']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::OutputPin" referenceName="pins">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="myOutPin"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="invisible_tools_section" label="Invisible">
          <ownedTools xsi:type="tool:DirectEditLabel" name="csd_rename_tool" label="Rename">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="class_diagram" label="Class Diagram (CD)" titleExpression="aql: self.name + &quot; [CSD]&quot;" domainClass="e4sm::Model" enablePopupBars="true">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <metamodel href="http://de.tu-ilmenau/e4sm/core/1.0.0#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.direction">
          <targets>PARENT</targets>
          <value name="UP"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.layering.strategy">
          <targets>PARENT</targets>
          <value name="COFFMAN_GRAHAM"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <edgeMappings name="extends_edge" label="Extends Edge" deletionDescription="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='cd_delete_extends']" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']" targetFinderExpression="feature:superType">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="2" routingStyle="tree" endsCentering="Target">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="containment_edge" label="Containment Edge" semanticCandidatesExpression="aql:self.types.eAllContents(core::ClassAttribute)" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']" targetMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']" targetFinderExpression="aql:self.type" sourceFinderExpression="aql:self.eContainer()" domainClass="core::ClassAttribute" useDomainElement="true">
          <style sourceArrow="FillDiamond" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <endLabelStyleDescription labelSize="13" showIcon="false" labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </endLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="type_container" label="Type" labelDirectEdit="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='cd_rename_classes']" semanticCandidatesExpression="feature:types" domainClass="core::TypeSpecification" childrenPresentation="List">
          <subNodeMappings name="attribute_node" label="Attribute" semanticCandidatesExpression="aql:self.attributes->select(myAttributeSpecification | not myAttributeSpecification.oclIsTypeOf(core::ClassAttribute))" domainClass="core::AttributeSpecification">
            <style xsi:type="style:NoteDescription" labelSize="13" showIcon="false" labelExpression="aql: self.name + (if(self.array) then ' []' else '' endif) + (if(self.oclIsTypeOf(core::IntegerAttribute)) then ' : int' else '' endif) +(if(self.oclIsTypeOf(core::StringAttribute)) then ' : string' else '' endif) + (if(self.oclIsTypeOf(core::DoubleAttribute)) then ' : double' else '' endif) + (if(self.oclIsTypeOf(core::BooleanAttribute)) then ' : boolean' else '' endif)" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="contained_attribute_node" label="Contained Attribute" semanticCandidatesExpression="aql:self.attributes->select(myAttributeSpecification | myAttributeSpecification.oclIsTypeOf(core::ClassAttribute))" domainClass="core::AttributeSpecification">
            <style xsi:type="style:NoteDescription" labelSize="13" showIcon="false" labelExpression="aql: self.name + (if(self.array) then ' []' else '' endif) + ' : ' + self.oclAsType(core::ClassAttribute).type.name else" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="13" showIcon="false" backgroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='ilm_orange_light']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="cd_creation_tools" label="Creation Tools">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="cd_create_type" label="Create Type" containerMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="core::TypeSpecification" referenceName="types">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="myNewType"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="cd_superclass_edge" label="Superclass Edge" precondition="aql:preSource &lt;> preTarget" edgeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@edgeMappings[name='extends_edge']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superType" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="cd_create_containment" label="Containment Edge" precondition="aql:preTarget&lt;>preSource" edgeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@edgeMappings[name='containment_edge']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="core::ClassAttribute" referenceName="attributes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newAttribute"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_integer_attribute" label="Integer Attribute" precondition="aql:container.oclIsTypeOf(core::TypeSpecification)" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']/@subNodeMappings[name='attribute_node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="core::IntegerAttribute" referenceName="attributes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newAttribute"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_boolean_attribute" label="Boolean Attribute" precondition="aql:container.oclIsTypeOf(core::TypeSpecification)" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']/@subNodeMappings[name='attribute_node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="core::BooleanAttribute" referenceName="attributes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newAttribute"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_string_attribute" label="String Attribute" precondition="aql:container.oclIsTypeOf(core::TypeSpecification)" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']/@subNodeMappings[name='attribute_node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="core::StringAttribute" referenceName="attributes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newAttribute"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create_double_attribute" label="Double Attribute" precondition="aql:container.oclIsTypeOf(core::TypeSpecification)" nodeMappings="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']/@subNodeMappings[name='attribute_node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="core::DoubleAttribute" referenceName="attributes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newAttribute"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="invisible_tools_cd" label="Invisible Tools">
          <ownedTools xsi:type="tool:DirectEditLabel" name="cd_rename_classes" label="Rename Classes" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="cd_delete_extends" label="Extends">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="superType"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclAsType(core::TypeSpecification).abstract">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='class_diagram']/@defaultLayer/@containerMappings[name='type_container']/@style" attributeName="labelFormat" value="italic"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="table_persons" label="Person Management Table (PMT)" titleExpression="aql:'[PMT] ' + self.oclAsType(e4sm::Model).name" domainClass="e4sm::Model">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <ownedLineMappings name="persons_row" label="Person" domainClass="e4sm::Person" semanticCandidatesExpression="feature:actors" headerLabelExpression="aql: ' '"/>
      <ownedCreateLine name="table_persons_create_person" label="Create Person" mapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='table_persons']/@ownedLineMappings[name='persons_row']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:self">
          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::Person" referenceName="actors"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedColumnMappings name="table_persons_name_col" label="Name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="table_persons_surname_col" label="Surname" headerLabelExpression="Surname" featureName="surname"/>
      <ownedColumnMappings name="table_persons_department_col" label="Department" headerLabelExpression="Department" featureName="department"/>
      <ownedColumnMappings name="table_persons_picture_file_col" label="Picture FileName" headerLabelExpression="Picture Filename" featureName="pictureFileName"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="table_docs" label="Documentation Table (DOCT)" titleExpression="aql:'[DOCT] ' + self.oclAsType(e4sm::Model).name" initialisation="true" domainClass="e4sm::Model">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <metamodel href="http://de.tu-ilmenau/e4sm/core/1.0.0#/"/>
      <ownedLineMappings name="elements_row" label="Element" domainClass="core::DocumentableElement" semanticCandidatesExpression="aql:self.eAllContents()->filter(core::DocumentableElement)" headerLabelExpression="aql: ' '">
        <backgroundConditionalStyle predicateExpression="aql:self.documentation.size()=0">
          <style>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
          </style>
        </backgroundConditionalStyle>
      </ownedLineMappings>
      <ownedColumnMappings name="table_doc_name_col" label="Name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="table_doc_doc" label="Documentation" headerLabelExpression="Documentation" featureName="documentation"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:CrossTableDescription" name="CON_repr" label="Multiclass Confusion Matrix (MCM)" titleExpression="aql:'[MCM] ' + self.oclAsType(e4sm::MulticlassConfusionMatrix).name" domainClass="e4sm::MulticlassConfusionMatrix">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <ownedLineMappings name="cm_line" label="Truth (Row)" domainClass="e4sm::ClassificationClass" semanticCandidatesExpression="aql:self.entries.truth" headerLabelExpression="feature:name"/>
      <ownedCreateLine name="cm_createLine" label="Create Line">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:self">
          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Class Selection">
            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="e4sm::ConfusionMatrixEntry" referenceName="entries">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="predicted"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="truth"/>
                </firstModelOperations>
              </initialOperation>
            </buttons>
            <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='CON_repr']/@ownedCreateLine.0/@firstModelOperation/@subModelOperations.0/@groups.0"/>
            <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
              <controls xsi:type="properties:SelectDescription" name="class_picker" label="Class" labelExpression="Class" helpExpression="Select a class to add" valueExpression="aql:self.eContainer(e4sm::Model).classificationClasses" candidatesExpression="aql:self.eContainer(e4sm::Model).classificationClasses" candidateDisplayExpression="aql:self.eContainer(e4sm::Model).classificationClasses.name">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                </initialOperation>
              </controls>
            </groups>
          </subModelOperations>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedColumnMappings name="cm_column" label="Predicted (Column)" headerLabelExpression="feature:name" domainClass="e4sm::ClassificationClass" semanticCandidatesExpression="aql:self.entries.predicted"/>
      <intersection name="cm_intersection" label="Intersection" lineMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='CON_repr']/@ownedLineMappings[name='cm_line']" columnMapping="//@ownedViewpoints[name='E4SM_Viewpoint']/@ownedRepresentations[name='CON_repr']/@ownedColumnMappings.0" labelExpression="feature:value" useDomainClass="true" columnFinderExpression="aql:self.predicted" lineFinderExpression="feature:truth" domainClass="e4sm::ConfusionMatrixEntry">
        <backgroundConditionalStyle predicateExpression="true">
          <style backgroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='confusion_matrix_cell_color']"/>
        </backgroundConditionalStyle>
      </intersection>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="binary_confusion_matrix_id" label="Binary Confusion Matrix (BCM)" titleExpression="aql:'[BCM] ' + self.oclAsType(e4sm::BinaryConfusionMatrix).name" domainClass="e4sm::BinaryClassificationComponent">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <ownedLineMappings name="binary_true_row" label="Truth" domainClass="e4sm::BinaryConfusionMatrix" semanticCandidatesExpression="feature:confusionMatrixes"/>
      <ownedColumnMappings name="feature_col_tp" label="TP" headerLabelExpression="TP" featureName="tp" labelExpression="feature:tp">
        <defaultBackground backgroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='binary_confusion_matrix_cell_tp_color']"/>
      </ownedColumnMappings>
      <ownedColumnMappings name="feature_col_fn" label="FN" headerLabelExpression="FN" featureName="fn" labelExpression="feature:fn">
        <defaultBackground backgroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='binary_confusion_matrix_cell_fn_color']"/>
      </ownedColumnMappings>
      <ownedColumnMappings name="feature_col_fp" label="FP" headerLabelExpression="FP" featureName="fp" labelExpression="feature:fp">
        <defaultBackground backgroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='binary_confusion_matrix_cell_fp_color']"/>
      </ownedColumnMappings>
      <ownedColumnMappings name="feature_col_tn" label="TN" headerLabelExpression="TN" featureName="tn" labelExpression="feature:tn">
        <defaultBackground backgroundColor="//@userColorsPalettes[name='E4SMColors']/@entries[name='binary_confusion_matrix_cell_tn_color']"/>
      </ownedColumnMappings>
      <ownedColumnMappings name="feature_col_accuracy" label="Accuracy" headerLabelExpression="Accuracy" canEdit="false" featureName="name" labelExpression="aql:self.computeAccuracy()"/>
      <ownedColumnMappings name="feature_col_recall" label="Recall" headerLabelExpression="Recall/TPR/Sensitivity" canEdit="false" featureName="name" labelExpression="aql:self.computeRecall()"/>
      <ownedColumnMappings name="feature_col_precision" label="Precision" headerLabelExpression="Precision" canEdit="false" featureName="name" labelExpression="aql:self.computePrecision()"/>
      <ownedColumnMappings name="feature_col_f1_score" label="F1 Score" headerLabelExpression="F1 Score" canEdit="false" featureName="name" labelExpression="aql:self.computeF1Score()"/>
      <ownedColumnMappings name="feature_col_specificity" label="Specificity" headerLabelExpression="Specificity" canEdit="false" featureName="name" labelExpression="aql:self.computeSpecificity()"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="table_security_assesment_hw" label="Risk Assesment Hardware (RAHWT)" titleExpression="aql:'[RAHWT] ' + self.oclAsType(e4sm::Model).name" initialisation="true" domainClass="e4sm::Model">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <metamodel href="http://de.tu-ilmenau/e4sm/core/1.0.0#/"/>
      <ownedLineMappings name="elements_row" label="Element" domainClass="e4sm::PhysicalComponent" semanticCandidatesExpression="aql:self.eAllContents()->filter(e4sm::PhysicalComponent)" headerLabelExpression="aql: ' '">
        <backgroundConditionalStyle predicateExpression="aql:self.documentation.size()=0">
          <style>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
          </style>
        </backgroundConditionalStyle>
      </ownedLineMappings>
      <ownedColumnMappings name="table_doc_name_col" label="Name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="table_doc_doc" label="Hardware" headerLabelExpression="Hardware" featureName="name" labelExpression="aql:''"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="table_security_assesment_sw" label="Risk Assesment Hardware (RASWT)" titleExpression="aql:'[RASWT] ' + self.oclAsType(e4sm::Model).name" initialisation="true" domainClass="e4sm::Model">
      <metamodel href="http://de.tu-ilmenau/e4sm/1.0.0#/"/>
      <metamodel href="http://de.tu-ilmenau/e4sm/core/1.0.0#/"/>
      <ownedLineMappings name="elements_row" label="Element" domainClass="e4sm::SoftwareComponent" semanticCandidatesExpression="aql:self.eAllContents()->filter(e4sm::SoftwareComponent)" headerLabelExpression="aql: ' '">
        <backgroundConditionalStyle predicateExpression="aql:self.documentation.size()=0">
          <style>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
          </style>
        </backgroundConditionalStyle>
      </ownedLineMappings>
      <ownedColumnMappings name="table_doc_name_col" label="Name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="table_raswt_programming_language" label="Programming Language" headerLabelExpression="Programming Language" featureName="name" labelExpression="aql:''"/>
      <ownedColumnMappings name="table_doc_doc" label="Interfaces" headerLabelExpression="Interfaces" featureName="name" labelExpression="aql:''"/>
      <ownedColumnMappings name="table_raswt_dependencies" label="Dependencies" headerLabelExpression="Dependencies" featureName="name" labelExpression="aql:''"/>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.Services"/>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.ConnectorServices"/>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.ElementTransformationServices"/>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.analysis.GraphUtils"/>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.analysis.AnalysisService"/>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.analysis.NetworkUtils"/>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.Utils"/>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.Documentation"/>
    <ownedJavaExtensions qualifiedClassName="e4sm.de.metamodel.design.analysis.ImportTimenetRunner"/>
  </ownedViewpoints>
  <userColorsPalettes name="E4SMColors">
    <entries xsi:type="description:UserFixedColor" red="255" green="121" blue="0" name="ilm_orange"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="51" blue="89" name="ilm_blue"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="116" blue="122" name="ilm_green"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="218" blue="179" name="ilm_orange_light"/>
    <entries xsi:type="description:ComputedColor" name="edge_flow_color" red="aql:(255.0 * (self.oclAsType(e4sm::Connector).computeFlow()/self.eContainer().oclAsType(e4sm::Package).getMaxFlow())).round()" green="0" blue="0"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="128" blue="51" name="darker_orange"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="180" blue="153" name="lighter_orange"/>
    <entries xsi:type="description:ComputedColor" name="confusion_matrix_cell_color" red="aql:255-(255.0 * (self.oclAsType(e4sm::ConfusionMatrixEntry).value.toDouble()/self.eContainer().getHighestValue().toDouble() )).round()" green="255" blue="255"/>
    <entries xsi:type="description:ComputedColor" name="binary_confusion_matrix_cell_tp_color" red="aql:255-(255.0 * (self.oclAsType(e4sm::BinaryConfusionMatrix).tp.toDouble()/self.oclAsType(e4sm::BinaryConfusionMatrix).getHighestValue().toDouble())).round()" green="255" blue="255"/>
    <entries xsi:type="description:ComputedColor" name="binary_confusion_matrix_cell_fn_color" red="aql:255-(255.0 * (self.oclAsType(e4sm::BinaryConfusionMatrix).fn.toDouble()/self.oclAsType(e4sm::BinaryConfusionMatrix).getHighestValue().toDouble())).round()" green="255" blue="255"/>
    <entries xsi:type="description:ComputedColor" name="binary_confusion_matrix_cell_tn_color" red="aql:255-(255.0 * (self.oclAsType(e4sm::BinaryConfusionMatrix).tn.toDouble()/self.oclAsType(e4sm::BinaryConfusionMatrix).getHighestValue().toDouble())).round()" green="255" blue="255"/>
    <entries xsi:type="description:ComputedColor" name="binary_confusion_matrix_cell_fp_color" red="aql:255-(255.0 * (self.oclAsType(e4sm::BinaryConfusionMatrix).fp.toDouble()/self.oclAsType(e4sm::BinaryConfusionMatrix).getHighestValue().toDouble())).round()" green="255" blue="255"/>
    <entries xsi:type="description:UserFixedColor" red="79" green="235" blue="158" name="asset_color"/>
    <entries xsi:type="description:UserFixedColor" red="220" green="20" blue="60" name="attacksurface_color"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="sirius_default_rules_properties">
    <categories name="Default">
      <pages name="sirius_default_rules_defaultpage" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()" groups="//@extensions.0/@categories.0/@groups.0"/>
      <groups name="sirius_default_rules_defaultgroup" labelExpression="Properties" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature)">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
        <validationSet>
          <semanticValidationRules name="timeFunctionIsValid_unused" label="Time Function is Valid" level="ERROR" message="aql:'The Time Function &quot;'+ self.oclAsType(e4sm::Sensor).timeFunction +'&quot; is not valid'" targetClass="e4sm::Sensor">
            <audits auditExpression="aql:true"/>
            <fixes name="Restore Default Value">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(e4sm::Sensor)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="timeFunction" valueExpression="EXP(1.0)"/>
                </firstModelOperations>
              </initialOperation>
            </fixes>
          </semanticValidationRules>
        </validationSet>
      </groups>
    </categories>
  </extensions>
</description:Group>
