/**
 */
package e4sm.de.metamodel.e4sm.provider;

import e4sm.de.metamodel.e4sm.util.e4smAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class e4smItemProviderAdapterFactory extends e4smAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public e4smItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Component} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentItemProvider componentItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Component}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentAdapter() {
		if (componentItemProvider == null) {
			componentItemProvider = new ComponentItemProvider(this);
		}

		return componentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.MachineLearningComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MachineLearningComponentItemProvider machineLearningComponentItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.MachineLearningComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMachineLearningComponentAdapter() {
		if (machineLearningComponentItemProvider == null) {
			machineLearningComponentItemProvider = new MachineLearningComponentItemProvider(this);
		}

		return machineLearningComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Connector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectorItemProvider connectorItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Connector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectorAdapter() {
		if (connectorItemProvider == null) {
			connectorItemProvider = new ConnectorItemProvider(this);
		}

		return connectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.PhysicalConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalConnectorItemProvider physicalConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.PhysicalConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhysicalConnectorAdapter() {
		if (physicalConnectorItemProvider == null) {
			physicalConnectorItemProvider = new PhysicalConnectorItemProvider(this);
		}

		return physicalConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.PhysicalComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalComponentItemProvider physicalComponentItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.PhysicalComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhysicalComponentAdapter() {
		if (physicalComponentItemProvider == null) {
			physicalComponentItemProvider = new PhysicalComponentItemProvider(this);
		}

		return physicalComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.SoftwareComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareComponentItemProvider softwareComponentItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.SoftwareComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareComponentAdapter() {
		if (softwareComponentItemProvider == null) {
			softwareComponentItemProvider = new SoftwareComponentItemProvider(this);
		}

		return softwareComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.LogicalConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalConnectorItemProvider logicalConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.LogicalConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalConnectorAdapter() {
		if (logicalConnectorItemProvider == null) {
			logicalConnectorItemProvider = new LogicalConnectorItemProvider(this);
		}

		return logicalConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Heuristic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HeuristicItemProvider heuristicItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Heuristic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHeuristicAdapter() {
		if (heuristicItemProvider == null) {
			heuristicItemProvider = new HeuristicItemProvider(this);
		}

		return heuristicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionItemProvider functionItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionAdapter() {
		if (functionItemProvider == null) {
			functionItemProvider = new FunctionItemProvider(this);
		}

		return functionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.ExternalDependency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalDependencyItemProvider externalDependencyItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.ExternalDependency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalDependencyAdapter() {
		if (externalDependencyItemProvider == null) {
			externalDependencyItemProvider = new ExternalDependencyItemProvider(this);
		}

		return externalDependencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Package} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackageItemProvider packageItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Package}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackageAdapter() {
		if (packageItemProvider == null) {
			packageItemProvider = new PackageItemProvider(this);
		}

		return packageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelItemProvider modelItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelAdapter() {
		if (modelItemProvider == null) {
			modelItemProvider = new ModelItemProvider(this);
		}

		return modelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Actor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorItemProvider actorItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Actor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorAdapter() {
		if (actorItemProvider == null) {
			actorItemProvider = new ActorItemProvider(this);
		}

		return actorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Human} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HumanItemProvider humanItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Human}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHumanAdapter() {
		if (humanItemProvider == null) {
			humanItemProvider = new HumanItemProvider(this);
		}

		return humanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Robot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RobotItemProvider robotItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Robot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRobotAdapter() {
		if (robotItemProvider == null) {
			robotItemProvider = new RobotItemProvider(this);
		}

		return robotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Sector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SectorItemProvider sectorItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Sector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSectorAdapter() {
		if (sectorItemProvider == null) {
			sectorItemProvider = new SectorItemProvider(this);
		}

		return sectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Sensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SensorItemProvider sensorItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Sensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSensorAdapter() {
		if (sensorItemProvider == null) {
			sensorItemProvider = new SensorItemProvider(this);
		}

		return sensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Actuator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActuatorItemProvider actuatorItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Actuator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActuatorAdapter() {
		if (actuatorItemProvider == null) {
			actuatorItemProvider = new ActuatorItemProvider(this);
		}

		return actuatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.InputPin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputPinItemProvider inputPinItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.InputPin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputPinAdapter() {
		if (inputPinItemProvider == null) {
			inputPinItemProvider = new InputPinItemProvider(this);
		}

		return inputPinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.OutputPin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputPinItemProvider outputPinItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.OutputPin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputPinAdapter() {
		if (outputPinItemProvider == null) {
			outputPinItemProvider = new OutputPinItemProvider(this);
		}

		return outputPinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Person} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PersonItemProvider personItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Person}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPersonAdapter() {
		if (personItemProvider == null) {
			personItemProvider = new PersonItemProvider(this);
		}

		return personItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.MeasurementUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasurementUnitItemProvider measurementUnitItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.MeasurementUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasurementUnitAdapter() {
		if (measurementUnitItemProvider == null) {
			measurementUnitItemProvider = new MeasurementUnitItemProvider(this);
		}

		return measurementUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.SimpleUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleUnitItemProvider simpleUnitItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.SimpleUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleUnitAdapter() {
		if (simpleUnitItemProvider == null) {
			simpleUnitItemProvider = new SimpleUnitItemProvider(this);
		}

		return simpleUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.DerivedUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedUnitItemProvider derivedUnitItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.DerivedUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedUnitAdapter() {
		if (derivedUnitItemProvider == null) {
			derivedUnitItemProvider = new DerivedUnitItemProvider(this);
		}

		return derivedUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.UnitConversion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitConversionItemProvider unitConversionItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.UnitConversion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitConversionAdapter() {
		if (unitConversionItemProvider == null) {
			unitConversionItemProvider = new UnitConversionItemProvider(this);
		}

		return unitConversionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.ConversionByPrefix} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConversionByPrefixItemProvider conversionByPrefixItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.ConversionByPrefix}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConversionByPrefixAdapter() {
		if (conversionByPrefixItemProvider == null) {
			conversionByPrefixItemProvider = new ConversionByPrefixItemProvider(this);
		}

		return conversionByPrefixItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.ConversionByConvention} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConversionByConventionItemProvider conversionByConventionItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.ConversionByConvention}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConversionByConventionAdapter() {
		if (conversionByConventionItemProvider == null) {
			conversionByConventionItemProvider = new ConversionByConventionItemProvider(this);
		}

		return conversionByConventionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.UnitPrefix} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitPrefixItemProvider unitPrefixItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.UnitPrefix}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitPrefixAdapter() {
		if (unitPrefixItemProvider == null) {
			unitPrefixItemProvider = new UnitPrefixItemProvider(this);
		}

		return unitPrefixItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.DataStore} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataStoreItemProvider dataStoreItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.DataStore}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataStoreAdapter() {
		if (dataStoreItemProvider == null) {
			dataStoreItemProvider = new DataStoreItemProvider(this);
		}

		return dataStoreItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Environment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnvironmentItemProvider environmentItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Environment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnvironmentAdapter() {
		if (environmentItemProvider == null) {
			environmentItemProvider = new EnvironmentItemProvider(this);
		}

		return environmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.ClassificationClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassificationClassItemProvider classificationClassItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.ClassificationClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassificationClassAdapter() {
		if (classificationClassItemProvider == null) {
			classificationClassItemProvider = new ClassificationClassItemProvider(this);
		}

		return classificationClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.ClassificationClassDistribution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassificationClassDistributionItemProvider classificationClassDistributionItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.ClassificationClassDistribution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassificationClassDistributionAdapter() {
		if (classificationClassDistributionItemProvider == null) {
			classificationClassDistributionItemProvider = new ClassificationClassDistributionItemProvider(this);
		}

		return classificationClassDistributionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.MulticlassConfusionMatrix} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MulticlassConfusionMatrixItemProvider multiclassConfusionMatrixItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.MulticlassConfusionMatrix}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMulticlassConfusionMatrixAdapter() {
		if (multiclassConfusionMatrixItemProvider == null) {
			multiclassConfusionMatrixItemProvider = new MulticlassConfusionMatrixItemProvider(this);
		}

		return multiclassConfusionMatrixItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.ConfusionMatrixEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfusionMatrixEntryItemProvider confusionMatrixEntryItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.ConfusionMatrixEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfusionMatrixEntryAdapter() {
		if (confusionMatrixEntryItemProvider == null) {
			confusionMatrixEntryItemProvider = new ConfusionMatrixEntryItemProvider(this);
		}

		return confusionMatrixEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.BinaryConfusionMatrix} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryConfusionMatrixItemProvider binaryConfusionMatrixItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.BinaryConfusionMatrix}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryConfusionMatrixAdapter() {
		if (binaryConfusionMatrixItemProvider == null) {
			binaryConfusionMatrixItemProvider = new BinaryConfusionMatrixItemProvider(this);
		}

		return binaryConfusionMatrixItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.BinaryClassificationComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryClassificationComponentItemProvider binaryClassificationComponentItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.BinaryClassificationComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryClassificationComponentAdapter() {
		if (binaryClassificationComponentItemProvider == null) {
			binaryClassificationComponentItemProvider = new BinaryClassificationComponentItemProvider(this);
		}

		return binaryClassificationComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.MulticlassClassificationComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MulticlassClassificationComponentItemProvider multiclassClassificationComponentItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.MulticlassClassificationComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMulticlassClassificationComponentAdapter() {
		if (multiclassClassificationComponentItemProvider == null) {
			multiclassClassificationComponentItemProvider = new MulticlassClassificationComponentItemProvider(this);
		}

		return multiclassClassificationComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.TokenSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TokenSpecificationItemProvider tokenSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.TokenSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTokenSpecificationAdapter() {
		if (tokenSpecificationItemProvider == null) {
			tokenSpecificationItemProvider = new TokenSpecificationItemProvider(this);
		}

		return tokenSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.StaticSize} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticSizeItemProvider staticSizeItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.StaticSize}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticSizeAdapter() {
		if (staticSizeItemProvider == null) {
			staticSizeItemProvider = new StaticSizeItemProvider(this);
		}

		return staticSizeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.Set} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetItemProvider setItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.Set}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetAdapter() {
		if (setItemProvider == null) {
			setItemProvider = new SetItemProvider(this);
		}

		return setItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.SetValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetValueItemProvider setValueItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.SetValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetValueAdapter() {
		if (setValueItemProvider == null) {
			setValueItemProvider = new SetValueItemProvider(this);
		}

		return setValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link e4sm.de.metamodel.e4sm.DynamicRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicRangeItemProvider dynamicRangeItemProvider;

	/**
	 * This creates an adapter for a {@link e4sm.de.metamodel.e4sm.DynamicRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicRangeAdapter() {
		if (dynamicRangeItemProvider == null) {
			dynamicRangeItemProvider = new DynamicRangeItemProvider(this);
		}

		return dynamicRangeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (componentItemProvider != null)
			componentItemProvider.dispose();
		if (machineLearningComponentItemProvider != null)
			machineLearningComponentItemProvider.dispose();
		if (connectorItemProvider != null)
			connectorItemProvider.dispose();
		if (physicalConnectorItemProvider != null)
			physicalConnectorItemProvider.dispose();
		if (physicalComponentItemProvider != null)
			physicalComponentItemProvider.dispose();
		if (softwareComponentItemProvider != null)
			softwareComponentItemProvider.dispose();
		if (logicalConnectorItemProvider != null)
			logicalConnectorItemProvider.dispose();
		if (heuristicItemProvider != null)
			heuristicItemProvider.dispose();
		if (functionItemProvider != null)
			functionItemProvider.dispose();
		if (externalDependencyItemProvider != null)
			externalDependencyItemProvider.dispose();
		if (packageItemProvider != null)
			packageItemProvider.dispose();
		if (modelItemProvider != null)
			modelItemProvider.dispose();
		if (actorItemProvider != null)
			actorItemProvider.dispose();
		if (humanItemProvider != null)
			humanItemProvider.dispose();
		if (robotItemProvider != null)
			robotItemProvider.dispose();
		if (sectorItemProvider != null)
			sectorItemProvider.dispose();
		if (sensorItemProvider != null)
			sensorItemProvider.dispose();
		if (actuatorItemProvider != null)
			actuatorItemProvider.dispose();
		if (inputPinItemProvider != null)
			inputPinItemProvider.dispose();
		if (outputPinItemProvider != null)
			outputPinItemProvider.dispose();
		if (personItemProvider != null)
			personItemProvider.dispose();
		if (measurementUnitItemProvider != null)
			measurementUnitItemProvider.dispose();
		if (simpleUnitItemProvider != null)
			simpleUnitItemProvider.dispose();
		if (derivedUnitItemProvider != null)
			derivedUnitItemProvider.dispose();
		if (unitConversionItemProvider != null)
			unitConversionItemProvider.dispose();
		if (conversionByPrefixItemProvider != null)
			conversionByPrefixItemProvider.dispose();
		if (conversionByConventionItemProvider != null)
			conversionByConventionItemProvider.dispose();
		if (unitPrefixItemProvider != null)
			unitPrefixItemProvider.dispose();
		if (importItemProvider != null)
			importItemProvider.dispose();
		if (dataStoreItemProvider != null)
			dataStoreItemProvider.dispose();
		if (environmentItemProvider != null)
			environmentItemProvider.dispose();
		if (classificationClassItemProvider != null)
			classificationClassItemProvider.dispose();
		if (classificationClassDistributionItemProvider != null)
			classificationClassDistributionItemProvider.dispose();
		if (multiclassConfusionMatrixItemProvider != null)
			multiclassConfusionMatrixItemProvider.dispose();
		if (confusionMatrixEntryItemProvider != null)
			confusionMatrixEntryItemProvider.dispose();
		if (binaryConfusionMatrixItemProvider != null)
			binaryConfusionMatrixItemProvider.dispose();
		if (binaryClassificationComponentItemProvider != null)
			binaryClassificationComponentItemProvider.dispose();
		if (multiclassClassificationComponentItemProvider != null)
			multiclassClassificationComponentItemProvider.dispose();
		if (tokenSpecificationItemProvider != null)
			tokenSpecificationItemProvider.dispose();
		if (staticSizeItemProvider != null)
			staticSizeItemProvider.dispose();
		if (setItemProvider != null)
			setItemProvider.dispose();
		if (setValueItemProvider != null)
			setValueItemProvider.dispose();
		if (dynamicRangeItemProvider != null)
			dynamicRangeItemProvider.dispose();
	}

}
