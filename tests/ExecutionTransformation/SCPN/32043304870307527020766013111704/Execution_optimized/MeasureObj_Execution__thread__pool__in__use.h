/************************************************************

	MeasureObj_Execution__thread__pool__in__use.h  -  generated by CodeGenerator r$Rev$

************************************************************/

#ifndef _MEASURE_OBJ_Execution__thread__pool__in__useHEADER
#define _MEASSURE_OBJ_Execution__thread__pool__in__useHEADER

#include "gmnet.h"
#include "MeasureObj.h"

class MeasureObj_Execution__thread__pool__in__use : public MeasureObj {
public:
	MeasureObj_Execution__thread__pool__in__use(NetClass* net);
	~MeasureObj_Execution__thread__pool__in__use();

	bool accumulative() {return false;}
	bool timeaverage() {return false;}
	double measure(double dt);
	void accum(const Binding *binding, double weight);
};

extern MeasureObj_Execution__thread__pool__in__use* measure_Execution__thread__pool__in__use;
#endif
