plugins {
    id 'java'
    id 'antlr'
    id 'eclipse'
}

repositories {
    mavenCentral()
    //jcenter() deprecated
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies{
    antlr "org.antlr:antlr4:4.9.3"
    implementation "org.antlr:antlr4-runtime:4.9.3"
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation fileTree('build/generated-src/antlr/main')
    //implementation files('lib/gpal.jar')
}

generateGrammarSource {
    maxHeapSize = "128m"
    arguments += ['-package', 'e4sm.de.antlr4.petri.grammar', /*'-visitor', '-no-listener',*/ '-long-messages']
    outputDirectory = new File(buildDir.toString() + "/gen-src/antlr/main/e4sm/de/antlr4/petri/grammar/")
    
    doLast {
        println "Copying generated grammar lexer/parser files to main directory."
        copy {
            from "${buildDir}/gen-src/antlr/main"
            into "src-gen"
        }
    }
    
}

compileJava.dependsOn generateGrammarSource

sourceSets{
    generated {
        java.srcDir 'src-gen'
    }
}

compileJava.source sourceSets.generated.java, sourceSets.main.java

clean{
    delete "gen-src"
    delete "src-gen"
}

/*eclipse{
    module{
        sourceDirs += file("generated-src/antlr/main/")
    }
}*/

test {
    //From folder: EDITOR/plugins/e4sm.de.antlr4.petri.grammar/build/classes/java/main  -  run:
    //grun e4sm.de.antlr4.petri.grammar.SCPN expressions -gui ..\..\..\..\examples\input.txt
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}